# Configure template for Florist
# Process this file with autoconf to produce a configure script.
# When adding new names (header-files, types, functions, etc.)
# to this file, don't forget to also add the corresponding line
# for HAVE_... to config.h.in.
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl
AC_INIT(florist_sources)
[echo See file "configure.log" for results of this step.]
# specifies some well-known file in the configured directory
AC_CONFIG_HEADER(config.h)
PRODUCT=florist
VERSION=0.0.0
AC_DEFINE_UNQUOTED(PRODUCT, "$PRODUCT")
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
AC_SUBST(PRODUCT)
AC_SUBST(VERSION)
AC_PROG_CC

rm -f Config pconfig.h
# Kludge for apparent inheritance of read-only status of pconfig.h.in,
# probably from RCS checkouts.
chmod 644 pconfig.h.in

[if ( test ! -d lib ); then mkdir lib; fi
# configure gnatprep parameters
rm -f gnatprep.config
cat > gnat_ver.gpb << EOF
EOF
if (gnatprep gnat_ver.gpb gnat_ver.adb /dev/null)
then
  echo "have gnatprep already; will use that version"
else
  echo "missing gnatprep; Makefile will build it"
  echo "LOCAL_GNATPREP = gnatprep" >> Config
fi
rm -f gnat_ver.gpb gnat_ver.gpb

cat > gnat_ver.adb << EOF
with system.interrupt_management;
use system.interrupt_management;
procedure gnat_ver is
begin null;
end gnat_ver;
EOF

echo $ac_n "checking whether GNAT has Interrupt_Management... " $ac_c;
if (gcc -c gnat_ver.adb 2>/dev/null); then
 echo "yes"
 echo "HAVE_INTERRUPT_MANAGEMENT := True" >> gnatprep.config;
else
 echo "no"
 echo "HAVE_INTERRUPT_MANAGEMENT := False" >> gnatprep.config;
fi;

rm -f gnat_ver.adb gnat_ver.o

cat > gnat_ver.adb << EOF
with system.tasking_soft_links;
procedure gnat_ver is
begin 
   if (NT_GNAT_Exception = NT_GNAT_Exception) then null; end if;
end gnat_ver;
EOF

echo $ac_n "checking whether GNAT has NT_GNAT_Exception... " $ac_c;
if (gcc -c gnat_ver.adb 2>/dev/null); then
 echo "yes"
 echo "HAVE_NT_GNAT_Exception := True" >> gnatprep.config;
else
 echo "no"
 echo "HAVE_NT_GNAT_Exception := False" >> gnatprep.config;
fi;

cat > gnat_ver.adb << EOF
with system.tasking_soft_links;
procedure gnat_ver is
begin system.tasking_soft_links.abort_defer.all;
end gnat_ver;
EOF

echo $ac_n "checking whether GNAT has Abort_Defer soft link... " $ac_c;
if (gcc -c gnat_ver.adb 2>/dev/null); then
 echo "yes"
 echo "HAVE_Soft_Abort_Defer := True" >> gnatprep.config;
else
 echo "no"
 echo "HAVE_Soft_Abort_Defer := False" >> gnatprep.config;
fi;
rm -f gnat_ver.adb gnat_ver.o

cat > gnat_ver.adb << EOF
with system.tasking_soft_links;
procedure gnat_ver is
begin system.tasking_soft_links.Set_Exc_Stack_Addr (System.Null_Address);
end gnat_ver;
EOF

echo $ac_n "checking whether Set_Exc_Stack_Addr needs Self_ID... " $ac_c;
if (gcc -c gnat_ver.adb 2>/dev/null); then
 echo "no"
 echo "HAVE_Set_Exc_Stack_Addr_With_Self_ID := False" >> gnatprep.config;
else
 echo "yes"
 echo "HAVE_Set_Exc_Stack_Addr_With_Self_ID := True" >> gnatprep.config;
fi;
rm -f gnat_ver.adb gnat_ver.o

echo $ac_n "checking for Xavier Leroy Linux threads... " $ac_c;
if (grep "Leroy" /usr/include/pthread.h >/dev/null 2>&1); then
 echo "yes"
 echo "HAVE_Leroy_Threads := True" >> gnatprep.config;
else
 echo "no"
 echo "HAVE_Leroy_Threads := False" >> gnatprep.config;
fi;

echo "We will assume errno is unsafe for exception propagation."
echo "-- to override, hand-edit gnatprep.config"
echo "HAVE_Safe_Errno := False" >> gnatprep.config;

UNAME_MACHINE=`(uname -m) 2>/dev/null`
UNAME_RELEASE=`(uname -r) 2>/dev/null`
UNAME_SYSTEM=`(uname -s) 2>/dev/null`
UNAME_VERSION=`(uname -v) 2>/dev/null`

if [ "${UNAME_SYSTEM}" = "Linux" ]; then
echo Linux := True >> gnatprep.config;
else 
echo Linux := False >> gnatprep.config;
fi

if [ "${UNAME_SYSTEM}" = "SunOS" ]; then
echo SunOS := True >> gnatprep.config;
else 
echo SunOS := False >> gnatprep.config;
fi

echo ${UNAME_SYSTEM} ${UNAME_MACHINE} ${UNAME_RELEASE} ${UNAME_VERSION}
case ${UNAME_SYSTEM} in
 HP-UX)
   echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
   case ${UNAME_RELEASE} in
     B.10.*)
           echo "making Config"
           cp ./configs/pconfig.HP-UX10.x ./pconfig.h.in;
           cat ./configs/Config.Default >> ./Config;
           ;;
     *) echo "Unexpected HP-UX release; using default."
           cp ./configs/pconfig.Default ./pconfig.h.in;
           cat ./configs/Config.Default >> ./Config;
           ;;
   esac;
   ;;
 SunOS)
# .... need to add cases here for versions 2.5.1 and 2.6, at least
   echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
   cp ./configs/pconfig.SunOS5.6 ./pconfig.h.in;
   cat ./configs/Config.Default >> ./Config;
   ;;
 Linux)
# .... need to add cases here for different thread and C libraries
   echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
   cp ./configs/pconfig.Linux ./pconfig.h.in;
   cat ./configs/Config.Default >> ./Config;
   ;;
 OSF1)
   echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
   case `gcc -dumpmachine` in
      *-*-osf4.0[bc])
	cp ./configs/pconfig.OSF1-4.0b ./pconfig.h.in;
	cat ./configs/Config.Default >> ./Config;
	;;
      *-*-osf4.0[d-z] | *-*-osf4.[1-9]*)
	cp ./configs/pconfig.OSF1 ./pconfig.h.in;
	cat ./configs/Config.OSF1 >> ./Config;
	;;
   esac
   ;;
 IRIX*)
   echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
   cp ./configs/pconfig.IRIX6.x ./pconfig.h.in;
   cat ./configs/Config.Default >> ./Config;
   ;;
 AIX)
   echo "Using Configuration for" ${UNAME_SYSTEM} ${UNAME_RELEASE};
   cp ./configs/pconfig.AIX4.1 ./pconfig.h.in;
   cat ./configs/Config.Default >> ./Config;
   ;;
 *)
   echo "No Configuration for ${UNAME_SYSTEM}. Using default.";
   cp ./configs/pconfig.Default ./pconfig.h.in;
   cat ./configs/Config.Default >> ./Config;
   ;;
esac; 

]
# defines HAVE_NAME_H for each header "name.h" found
# also checks for location of Pthread library
# note that the order is rather touchy
# for Solaris 2.5.1, utsname.h must precede limits.h
# for Solaris 2.5.1, netinet/in.h must preceded arpa/inet.h
# for Linux 2.0.x with Provenzano (MIT) threads,
#  pthread.h must follow sched.h, since
#  pthread.h redefines symbols in sched.h;
#  the effect is to detect the problem and drop pthread.h
AC_POSIX_HEADERS(\
 aio.h\
 dirent.h\
 errno.h\
 fcntl.h\
 grp.h\
 locale.h\
 mqueue.h\
 pwd.h\
 sched.h\
 pthread.h\
 semaphore.h\
 setjmp.h\
 signal.h\
 stdio.h\
 sys/mman.h\
 sys/stat.h\
 sys/times.h\
 sys/types.h\
 sys/utsname.h\
 limits.h\
 sys/wait.h\
 termios.h\
 time.h\
 sys/time.h\
 unistd.h\
 utime.h\
)

# POSIX.5c headers are separated, because we want to do
# some special processing to try to substitute for missing standard
# header files.
# Checks for xti.h and tli.h are built-in, as is check for whether we
# need addrinfo.h.
# We always call this after AC_POSIX_HEADERS, so that pconfig.h will
# already have the other required POSIX headers in it, and in particular
# will have any lines inherited from pconfig.h.in.
AC_POSIX5C_HEADERS(
 netdb.h\
 netinet/in.h\
 netinet/in_systm.h\
 netinet/ip.h\
 netinet/tcp.h\
 arpa/inet.h\
 poll.h\
 sys/select.h\
 sys/socket.h\
 sys/uio.h\
 sys/un.h\
)

AC_POSIX_LIB(pthread, pthread_self,,
AC_POSIX_LIB(pthread, __pthread_self,,
AC_POSIX_LIB(pthreads, pthread_self,,
AC_POSIX_LIB(dce, pthread_self,,
AC_POSIX_LIB(:libdce.a, pthread_self,,
AC_POSIX_LIB(thread, pthread_self))))))

AC_POSIX_LIB(aio, aio_read)

AC_POSIX_LIB(posix4, clock_gettime,,
AC_POSIX_LIB(rt, clock_gettime))

AC_POSIX_LIB(nsl, gethostbyname)

AC_POSIX_LIB(nsl, t_bind,,
AC_POSIX_LIB(nsl_s, t_bind))

AC_POSIX_LIB(socket, socketpair,,
AC_POSIX_LIB(BSD, socketpair,,
AC_POSIX_LIB(bsd, socketpair)))

AC_POSIX_LIB(socket, accept,,
AC_POSIX_LIB(BSD, accept,,
AC_POSIX_LIB(bsd, accept)))

AC_POSIX_LIB(resolv, h_errno)

echo using "LIBS=${LIBS}"
echo "LIBS=${LIBS}" >> Config

AC_POSIX_VAR(t_errno)
AC_POSIX_VAR(t_nerr)
AC_POSIX_COMP(msghdr, msg_control)
AC_POSIX_COMP(msghdr, msg_controllen)
AC_POSIX_COMP(msghdr, msg_flags)
AC_POSIX_COMP(sigevent, sigev_notify_function)
AC_POSIX_COMP_OVERLAY(sigaction, sa_sigaction, sa_handler)
AC_POSIX_STRUCTS(\
 addrinfo\
 aiocb\
 cmsghdr\
 dirent\
 flock\
 group\
 hostent\
 iovec\
 in_addr\
 ip_opts\
 linger\
 msghdr\
 mq_attr\
 netbuf\
 netent\
 passwd\
 pollfd\
 protoent\
 tm\
 tms\
 sched_param\
 servent\
 sigaction\
 cma_sigaction\
 sigevent\
 sockaddr\
 sockaddr_in\
 sockaddr_un\
 stat\
 termios\
 timespec\
 timeval\
 t_info\
 t_opthdr\
 t_bind\
 t_optmgmt\
 t_discon\
 t_call\
 t_unitdata\
 t_uderr\
 t_linger\
 t_kpalive\
 itimerspec\
 utimbuf\
 utsname\
)
AC_POSIX_TYPES(\
 cc_t\
 clockid_t\
 clock_t\
 dev_t\
 fd_set\
 ino_t\
 in_addr_t\
 in_port_t\
 mqd_t\
 nlink_t\
 pthread_attr_t\
 pthread_condattr_t\
 pthread_cond_t\
 pthread_key_t\
 pthread_mutexattr_t\
 pthread_mutex_t\
 pthread_once_t\
 pthread_t\
 sa_family_t\
 sem_t\
 siginfo_t\
 sigset_t\
 sigval\
 speed_t\
 suseconds_t\
 tcflag_t\
 timer_t\
)


AC_POSIX_FUNCS(\
 accept\
 access\
 aio_cancel\
 aio_error\
 aio_fsync\
 aio_read\
 aio_return\
 aio_suspend\
 aio_write\
 bind\
 cfgetispeed\
 cfgetospeed\
 cfsetispeed\
 cfsetospeed\
 chdir\
 chmod\
 chown\
 clock_getres\
 clock_gettime\
 clock_settime\
 close\
 closedir\
 connect\
 ctermid\
 ctime\
 ctime_r\
 dup\
 dup2\
 endhostent\
 endnetent\
 endprotoent\
 endservent\
 execl\
 execle\
 execlp\
 execv\
 execve\
 execvp\
 fchmod\
 fcntl\
 fdatasync\
 fork\
 fpathconf\
 fstat\
 fsync\
 ftruncate\
 getaddrinfo\
 getcwd\
 getegid\
 getenv\
 geteuid\
 getgid\
 getgrgid\
 getgrgid_r\
 getgrnam\
 getgrnam_r\
 getgroups\
 gethostbyaddr\
 gethostbyaddr_r\
 gethostbyname\
 gethostbyname_r\
 gethostname\
 getlogin\
 getlogin_r\
 getpeername\
 getpgrp\
 getpid\
 getppid\
 getnetbyaddr\
 getnetbyaddr_r\
 getnetbyname\
 getnetbyname_r\
 getprotobyname\
 getprotobyname_r\
 getprotobynumber\
 getprotobynumber_r\
 getservbyname\
 getservbyname_r\
 getpwnam\
 getpwnam_r\
 getpwuid\
 getpwuid_r\
 getservbyport\
 getservbyport_r\
 getsockname\
 getsockname_r\
 getsockopt\
 getuid\
 gmtime_r\
 inet_addr\
 inet_lnaof\
 inet_makeaddr\
 inet_network\
 inet_ntoa\
 inet_netof\
 isatty\
 isfdtype\
 kill\
 link\
 lio_listio\
 listen\
 lseek\
 mkdir\
 mkfifo\
 mlock\
 mlockall\
 mmap\
 mprotect\
 mq_close\
 mq_getattr\
 mq_notify\
 mq_open\
 mq_receive\
 mq_send\
 mq_setattr\
 mq_unlink\
 msync\
 munlock\
 munlockall\
 munmap\
 open\
 opendir\
 pathconf\
 pipe\
 poll\
 pthread_condattr_destroy\
 pthread_condattr_getpshared\
 pthread_condattr_init\
 pthread_condattr_setpshared\
 pthread_cond_broadcast\
 pthread_cond_destroy\
 pthread_cond_init\
 pthread_cond_signal\
 pthread_cond_timedwait\
 pthread_cond_wait\
 pthread_mutexattr_destroy\
 pthread_mutexattr_getprioceiling\
 pthread_mutexattr_getprotocol\
 pthread_mutexattr_getpshared\
 pthread_mutexattr_init\
 pthread_mutexattr_setprioceiling\
 pthread_mutexattr_setprotocol\
 pthread_mutexattr_setpshared\
 pthread_mutex_destroy\
 pthread_mutex_getprioceiling\
 pthread_mutex_init\
 pthread_mutex_lock\
 pthread_mutex_setprioceiling\
 pthread_mutex_trylock\
 pthread_mutex_unlock\
 pthread_sigmask\
 putenv\
 rcvmsg\
 read\
 readdir\
 readdir_r\
 recv\
 recvfrom\
 recvmsg\
 rename\
 rand_r\
 rmdir\
 sched_getparam\
 sched_getscheduler\
 sched_get_priority_max\
 sched_get_priority_min\
 sched_rr_get_interval\
 sched_setparam\
 sched_setscheduler\
 sched_yield\
 select\
 sem_close\
 sem_destroy\
 sem_getvalue\
 sem_init\
 sem_open\
 sem_post\
 sem_trywait\
 sem_unlink\
 sem_wait\
 send\
 sendto\
 sendmsg\
 setgid\
 setenv\
 sethostent\
 setnetent\
 setpgid\
 setprotoent\
 setservent\
 setsid\
 setsockopt\
 setuid\
 shm_open\
 shm_unlink\
 shutdown\
 sigaction\
 sigaddset\
 sigdelset\
 sigemptyset\
 sigfillset\
 sigismember\
 siglongjmp\
 sigpending\
 sigprocmask\
 sigqueue\
 sigsetjmp\
 sigsuspend\
 sigtimedwait\
 sigwait\
 sigwaitinfo\
 socket\
 sockatmark\
 socketpair\
 stat\
 strtok_r\
 sysconf\
 tcdrain\
 tcflow\
 tcflush\
 tcgetattr\
 tcgetpgrp\
 tcsendbreak\
 tcsetattr\
 tcsetpgrp\
 time\
 timer_create\
 timer_delete\
 timer_getoverrun\
 timer_gettime\
 timer_settime\
 times\
 ttyname\
 ttyname_r\
 t_accept\
 t_alloc\
 t_bind\
 t_blocking\
 t_close\
 t_connect\
 t_error\
 t_free\
 t_getinfo\
 t_getprotaddr\
 t_getstate\
 t_listen\
 t_look\
 t_nonblocking\
 t_open\
 t_optmgmt\
 t_rcv\
 t_rcvconnect\
 t_rcvdis\
 t_rcvrel\
 t_rcvudata\
 t_snd\
 t_snddis\
 t_sndudata\
 t_strerror\
 t_sync\
 t_unbind\
 t_rcvreldata\
 t_rcvuderr\
 t_rcvv\
 t_rcvvudata\
 t_sndreldata\
 t_sndrel\
 t_sndv\
 t_sndvudata\
 umask\
 uname\
 unlink\
 unsetenv\
 utime\
 waitpid\
 write\
 __posix_sigwait\
 __posix_ctime_r\
 __posix_readdir_r\
 __posix_sigwait_r\
 __posix_ttyname_r\
)

AC_OUTPUT(,[test -z "$CONFIG_HEADERS" || date > stamp-h])
